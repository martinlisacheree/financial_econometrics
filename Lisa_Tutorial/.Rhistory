library(rmsfuns)
load_pkg(c("tidyverse", "devtools", "rugarch", "forecast", "tbl2xts",
"lubridate", "PerformanceAnalytics", "ggthemes"))
dailydata <- read_csv("https://raw.githubusercontent.com/Nicktz/ExDat/master/extdata/findata.csv",
col_types = cols(.default = "d", Date = "D"))
View(dailydata)
dailydata %>%
gather(dailydata, "Stock", -Date)
dailydata %>%
gather("Stock", "Close", -Date)
source("code/Packages.R")
source("code/Data_Fetch.R")
View(dailydata)
View(dailydata)
View(dailydata)
source("code/Packages.R")
source("code/Data_Fetch.R")
dailydata <- read_csv("https://raw.githubusercontent.com/Nicktz/ExDat/master/extdata/findata.csv",
col_types = cols(.default = "d", Date = "D"))
write.csv(dailydata, "\data")
write.csv(dailydata, "/data")
source("code/Data_Fetch.R")
View(tidydata)
tidydata <-
dailydata %>%
gather("Stock", "Close", -Date)
#Saving cleaned data
write.csv(dailydata, "\data\cleandata.csv")
tidydata <-
dailydata %>%
gather("Stock", "Close", -Date)
#Saving cleaned data
write.csv(dailydata, "/data/cleandata.csv")
tidydata %>%
group_by(Stocks) %>%
arrange(Date) %>%
mutate(Return = Stocks/lag(Stocks)-1)
View(tidydata)
tidydata %>%
group_by(Stock) %>%
arrange(Date) %>%
mutate(Return = Stock/lag(Stock)-1)
source("code/Packages.R")
source("code/Data_Fetch.R")
tidydata %>%
group_by(Stock) %>%
arrange(Date) %>%
mutate(Return = Stock/lag(Stock)-1)
source("code/Packages.R")
tidydata %>%
group_by(Stock) %>%
arrange(Date) %>%
mutate(Return = Stock/lag(Stock)-1)
View(tidydata)
tidydata %>%
group_by(Stock) %>%
mutate(Return = Close/lag(Close)-1)
source("code/Returns_Calculator.R")
View(tidydata)
omit.na(tidydata)
Omit.NA(tidydata)
tidydata %>%
group_by("Stock") %>%
filter(ymd(20060101) <= Date <= ymd(20080101)) %>%
summarise(mean = mean(Return, na.rm = TRUE), variance = var(Return, na.rm = TRUE))
View(tidydata)
tidydata %>%
group_by("Stock") %>%
filter(ymd(20060101) <= Date <= ymd(20080101)) %>%
summarise(period1_mean = mean(Return, na.rm = T), period1_variance = var(Return, na.rm = T))
View(tidydata)
tidydata %>%
filter(ymd(20060101) <= Date & ymd(20081231) >= Date) %>%
group_by(Stock) %>%
summarise(period1_mean = mean(Return, na.rm = T), period1_variance = var(Return, na.rm = T))
tidydata %>%
filter(ymd(20060101) <= Date & ymd(20081231) >= Date) %>%
group_by(Stock) %>%
summarise(period1_mean = mean(Return, na.rm = T)*100, period1_variance = var(Return, na.rm = T)*100) %>%
tbl_df()
View(tidydata)
View(tidydata)
tidydata %>%
filter(ymd(20100101) <= Date & ymd(20131231) >= Date) %>%
group_by(Stock) %>%
summarise(period1_mean = mean(Return, na.rm = T)*100, period1_variance = var(Return, na.rm = T)*100) %>%
tbl_df()
source("code/Moments_Calculator.R")
View(moments1)
View(moments1)
table <- xtable(moments1, caption = "1st & 2nd Moments of Stock Returns, 2006-2008 \\label{tab1}")
View(table)
View(table)
library(xtable)
table1 <- xtable(moments1, caption = "1st & 2nd Moments of Stock Returns, 2006-2008 \\label{tab1}")
print.xtable(table,
floating = TRUE,
table.placement = 'H',
comment = FALSE,
caption.placement = 'bottom'
)
table2 <- xtable(moments2, caption = "1st & 2nd Moments of Stock Returns, 2010-2013 \\label{tab2}")
print.xtable(table,
floating = TRUE,
table.placement = 'H',
comment = FALSE,
caption.placement = 'bottom'
)
print.xtable(table2,
floating = TRUE,
table.placement = 'H',
comment = FALSE,
caption.placement = 'bottom'
)
rm(table)
View(table1)
View(table2)
source("code/Packages.R")
source("code/Data_Fetch.R")
library(xtable)
source("code/Returns_Calculator.R")
source("code/Moments_Calculator.R")
source("code/Moments_Calculator.R")
View(moments2)
View(moments1)
table2 <- xtable(moments2, caption = "1st & 2nd Moments of Stock Returns, 2010-2013 \\label{tab2}")
print.xtable(table2,
floating = TRUE,
table.placement = 'H',
comment = FALSE,
caption.placement = 'bottom'
)
rm(table2)
View(moments1)
View(moments2)
source("code/Moments_Calculator.R")
source("code/Moments_Calculator.R")
View(tidydata)
tidydata %>%
group_by(Stock) %>%
summarise(correlation = cor(Return)) %>%
tbl_df()
View(dailydata)
dailydata %>%
group_by(Stock) %>%
summarise(correlation = cor()) %>%
tbl_df()
dailydata %>%
summarise(correlation = cor()) %>%
tbl_df()
dailydata %>%
summarise(dailydata, correlation = cor()) %>%
tbl_df()
cor(dailydata)
cor(dailydata[,2],dailydata[,3])
cor(dailydata[,2],dailydata[,3],dailydata[,4],dailydata[,5],,dailydata[,6],dailydata[,7],dailydata[,8])
pairs(dailydata[,2] ~ -dailydata[,1], data = dailydata)
source("code/Packages.R")
source("code/Data_Fetch.R")
library(xtable)
source("code/Returns_Calculator.R")
source("code/Moments_Calculator.R")
print.xtable(xtable(moments1, caption = "1st and 2nd Moments of Stock Returns, 2006-2008 \\label{tab1}"),
floating = TRUE,
table.placement = 'H',
comment = FALSE,
scalebox='0.9',
caption.placement = 'bottom'
)
print.xtable(xtable(moments2, caption = "1st and 2nd Moments of Stock Returns, 2010-2013 \\label{tab2}"),
floating = TRUE,
table.placement = 'H',
comment = FALSE,
scalebox='0.9',
caption.placement = 'bottom'
)
print.xtable(xtable(cor(dailydata[, c(2,3,4,5,6,7,8)], use = "complete.obs"), caption = "Unconditional Correlations Between the Stocks \\label{tab3}"),
floating = TRUE,
table.placement = 'H',
comment = FALSE,
scalebox='0.7',
caption.placement = 'bottom'
)
View(dailydata)
source("code/Packages.R")
source("code/Data_Fetch.R")
library(xtable)
source("code/Returns_Calculator.R")
source("code/Moments_Calculator.R")
View(widedata)
View(tidydata)
source("code/Packages.R")
source("code/Data_Fetch.R")
library(xtable)
tidydata <-
tidydata %>%
group_by(Stock) %>%
mutate(Return = Close/lag(Close)-1) %>%
mutate(LogReturn = log(1 + Return/100)*100)
View(tidydata)
subset(tidydata, select = -c(Close, Return))
widedata <-
subset(tidydata, select = -c(Close, Return)) %>%
spread(tidydata, key = Stock, value = LogReturn)
View(widedata)
View(tidydata)
subset(tidydata, select = -c(Close, Return))
widedata <-
subset(tidydata, select = -c(Close, Return)) %>%
spread(key = Stock, value = LogReturn)
View(widedata)
View(widedata)
cl = makePSOCKcluster(10)
AC = autoarfima(as.numeric(widedata[,c(2,3,4,5,6,7,8)]), ar.max = 2, ma.max = 2,
criterion = "AIC", method = "partial", arfima = FALSE, include.mean = NULL,
distribution.model = "norm", solver = "solnp", cluster = cl)
show(head(AC$rank.matrix))
porteqw = Return.portfolio(widedata[,c(2,3,4,5,6,7,8)], weight = NULL, geometric = FALSE)
porteqw = Return.portfolio(widedata, weight = NULL, geometric = FALSE)
na.omit(widedata)
widedata <- na.omit(widedata)
tidydata <-
dailydata %>%
tbl_xts() %>%
gather("Stock", "Close", -Date)
tidydata <-
dailydata %>%
gather("Stock", "Close", -Date) %>%
tbl_xts()
tidydata <-
tidydata %>%
group_by(Stock) %>%
mutate(Return = Close/lag(Close)-1) %>%
mutate(LogReturn = log(1 + Return/100)*100)
tidydata <-
dailydata %>%
gather("Stock", "Close", -Date)
tidydata <-
tidydata %>%
group_by(Stock) %>%
mutate(Return = Close/lag(Close)-1) %>%
mutate(LogReturn = log(1 + Return/100)*100)
widedata <-
subset(tidydata, select = -c(Close, Return)) %>%
spread(key = Stock, value = LogReturn) %>%
tbl_xts()
widedata <- na.omit(widedata)
porteqw = Return.portfolio(widedata, weight = NULL, geometric = FALSE)
View(porteqw)
AC = autoarfima(as.numeric(porteqw), ar.max = 2, ma.max = 2,
criterion = "AIC", method = "partial", arfima = FALSE, include.mean = NULL,
distribution.model = "norm", solver = "solnp", cluster = cl)
show(head(AC$rank.matrix))
garch11 <- ugarchspec(variance.model = list(model = c("sGARCH",
"gjrGARCH", "eGARCH", "fGARCH", "apARCH")[1], garchOrder = c(1,1)),
mean.model = list(armaOrder = c(1, 0), include.mean = TRUE),
distribution.model = c("norm", "snorm", "std", "sstd", "ged",
"sged", "nig", "ghyp", "jsu")[1])
garchfit1 = ugarchfit(spec = garch11, data = as.numeric(porteqw))
class(garchfit1)
plot(garchfit1, which = "all")
plot(garchfit1, which = "all")
show(head(AC$rank.matrix))
source("code/GARCH_Calculator.R")
plot(garchfit1, which = "all")
View(porteqw)
porteqw %>%
mutate(Returns = coalesce(Returns, 0)) %>%
mutate(Cum_Ret = cumprod(1+Returns))
porteqw %>%
xts_tbl() %>%
mutate(Returns = coalesce(Returns, 0)) %>%
mutate(Cum_Ret = cumprod(1+Returns))
porteqw %>%
xts_tbl() %>%
mutate(portfolio.returns = coalesce(portfolio.returns, 0)) %>%
mutate(Cum_Ret = cumprod(1+portfolio.returns))
View(porteqw)
cumporteqw <- porteqw %>%
xts_tbl() %>%
mutate(portfolio.returns = coalesce(portfolio.returns, 0)) %>%
mutate(Cum_Ret = cumprod(1+portfolio.returns))
View(cumporteqw)
ggplot(cumporteqw) +
geom_line(aes(Date, Cum_Ret), color = "steelblue") +
theme_bw() + labs(title = "Portfolio cumulative Return")
ggplot(cumporteqw) +
geom_line(aes(date, Cum_Ret), color = "steelblue") +
theme_bw() + labs(title = "Portfolio cumulative Return")
write.csv(dailydata, "data/cleandata.csv")
tidy <- read.csv("data/cleandata.csv")
View(tidy)
rm(tidy)
data <- read.csv("data/cleandata.csv")
data[,-1]
tidydata <-
data[,-1] %>%
gather("Stock", "Close", -Date)
View(tidydata)
